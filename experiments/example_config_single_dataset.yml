##### Network and data configuration

#### Data paths
DATA_BASE_DIR: "data/processed/fish/"

# Set GT path to "" if N2V is to be performed
DATA_TRAIN_RAW_DIRS: ["raw/train"]
DATA_TRAIN_GT_DIRS: ["gt/train"]

DATA_PRED_RAW_DIRS: ["raw/test"]
DATA_PRED_GT_DIRS: ["gt/test"]

# If specified, the data that is kept in memory and processed is converted to
# this format
# Can be 'proportional' or 'even', in the first case the probability of selecting
# a dataset is proportional to its size, in the latter datasets are chosen
# completely at ranom
DISTRIBUTION_MODE: "proportional"

### Network configuration
MODEL: "baseline"
# Rigth now only depth 3 works
DEPTH: 3
BATCH_SIZE: 24
TRAIN_PATCH_SIZE: 100
PRED_PATCH_SIZE: 128
VIRTUAL_BATCH_SIZE: 20
OVERLAP: 48
AUGMENT_DATA: True
# How much of training data should be used for validation
VALIDATION_RATIO: 0.1
# Number of images to compute the validation loss with after a backpropagation step
VALIDATION_SIZE: 20
STEPS_PER_EPOCH: 5
EPOCHS: 1000
STEPS_PER_EPOCH: 5
NUM_CLASSES: 1

### EXperiment configuration
# If specified, training will be continued from this checkpoint
#TRAIN_NETWORK_PATH: "best.net"
# If set to yes, the training process will write data to tensorboard
WRITE_TENSORBOARD_DATA: yes
# If set to yes, the network stores an example prediction every STEPS_PER_EPOCH
WRITE_EXAMPLE_IMAGE: yes
# Trained network to use for prediction
PRED_NETWORK_PATH: "best.net"
# Path where to store denoised images, can be "" to omit storing prediction results
PRED_OUTPUT_PATH: "prediction"
# Images will be stored using the specified formats. Possible values are 'png' and 'tif'.
OUTPUT_IMAGE_FORMATS: ["tif"]
# If set to yes, the network also writes the individual images weighted by their
# respective weight to the prediction output folder [PRED_OUTPUT_PATH]
WRITE_SUBNETWORK_IMAGES: yes
# If set to yes, the network saves the weights computed for the subnetworks
WRITE_SUBNETWORK_WEIGHTS: yes